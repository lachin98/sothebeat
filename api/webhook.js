import TelegramBot from 'node-telegram-bot-api';

export default async function handler(req, res) {
  // –†–∞–∑—Ä–µ—à–∞–µ–º CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method !== 'POST') {
    return res.status(200).json({ ok: true, message: 'Webhook endpoint ready' });
  }

  try {
    const token = process.env.TELEGRAM_BOT_TOKEN;
    const webAppUrl = process.env.WEBAPP_URL || 'https://southbeat-bot.vercel.app';
    
    if (!token) {
      console.error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return res.status(500).json({ error: 'Bot token not found' });
    }

    const bot = new TelegramBot(token);
    const { body } = req;

    console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', JSON.stringify(body, null, 2));

    if (body.message) {
      const chatId = body.message.chat.id;
      const user = body.message.from;
      
      if (body.message.text === '/start') {
        const keyboard = {
          inline_keyboard: [[
            {
              text: 'ÔøΩÔøΩ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É SotheBEAT!',
              web_app: { url: webAppUrl }
            }
          ]]
        };

        await bot.sendMessage(chatId, 
          `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ BEAT 2025!\n\n` +
          `–≠—Ç–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∞—É–∫—Ü–∏–æ–Ω –≤ —Å—Ç–∏–ª–µ Sotheby's!\n\n` +
          `üìù –ü—Ä–∞–≤–∏–ª–∞:\n` +
          `‚Ä¢ 3 —Ä–∞—É–Ω–¥–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω (5 –º–∏–Ω—É—Ç –∫–∞–∂–¥—ã–π)\n` +
          `‚Ä¢ –ó–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–∞–ª–ª—ã\n` +
          `‚Ä¢ –í —Ñ–∏–Ω–∞–ª–µ - –∞—É–∫—Ü–∏–æ–Ω –ø—Ä–∏–∑–æ–≤!\n\n` +
          `–ì–æ—Ç–æ–≤—ã? –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É! üëá`,
          { reply_markup: keyboard }
        );
      }
    }
    
    res.status(200).json({ ok: true });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ webhook:', error);
    res.status(200).json({ ok: true, error: error.message });
  }
}
